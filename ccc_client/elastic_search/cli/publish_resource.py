from __future__ import print_function
import argparse
from ccc_client.elastic_search.ElasticSearchRunner import ElasticSearchRunner

def run(args):
    runner = ElasticSearchRunner(args.host, args.port, args.authToken)
    r = runner.publish_resource(
        args.filepath,
        args.site,
        args.user,
        args.project,
        args.workflowId,
        args.mimeType,
        'resource',
        args.inheritFrom,
        args.property_override,
        args.isMock,
        args.skipDtsRegistration
    )
    print(r)


parser = argparse.ArgumentParser()
parser.add_argument(
    "--filepath", "-f",
    type=str,
    required=True,
    help="file to be registered in ES index"
)
parser.add_argument(
    "--mimeType", "-t",
    type=str,
    help="the MIME type of the file"
)
parser.add_argument(
    "--inheritFrom", "-i",
    type=str,
    help="a cccId - if provided, the fields of this existing record will \
    be queried and applied to the incoming resource. Any values provided \
    using --propertyOverride will override these"
)
parser.add_argument(
    "--propertyOverride", "-o",
    type=str,
    nargs="+",
    help="One or more fields to apply to the incoming resource. The values \
    should be supplied in the form 'FieldName:Value'"
)
parser.add_argument(
    "--site", "-s",
    type=str,
    choices=["central", "dfci", "ohsu", "oicr"],
    help="site this file is associated with"
)
parser.add_argument(
    "--user", "-u",
    type=str,
    help="user identity"
)
parser.add_argument(
    "--project", "-p",
    type=str,
    help="The project this file is associated with"
)
parser.add_argument(
    "--workflowId", "-w",
    type=str,
    help="The workflow this file was generated by"
)
parser.add_argument(
    "--domainJson", "-D",
    type=str,
    help="this is the path to an alternate file describing the \
    domains/fields to use for import."
)
parser.add_argument(
    "--mock",
    dest="isMock",
    action="store_true",
    help="perform a mock operation, which runs your input through the \
    normal code path, but outputs the JSON that would otherwise be posted \
    to elasticsearch, without actually sending it"
)
parser.add_argument(
    "--skipDtsRegistration",
    dest="skipDtsRegistration",
    action="store_true",
    help="skip any attempt to register or validate CCC Ids and filepaths \
    with the DTS"
)
